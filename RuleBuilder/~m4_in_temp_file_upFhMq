m4_init()
m4_define([b4_actions], 
[b4_case(3, [b4_syncline(69, [["rule.y"]])
[    { cout << "Statement, root = " << ]b4_rhs_value(3, 2, [[id]])[->id << endl; }]])

b4_case(4, [b4_syncline(70, [["rule.y"]])
[    { cout << "Expression, root = " << ]b4_rhs_value(3, 2, [[id]])[->id << endl; }]])

b4_case(5, [b4_syncline(71, [["rule.y"]])
[    { extern node_t *syntax_root; syntax_root = ]b4_rhs_value(3, 2, [[id]])[; return 0;}]])

b4_case(6, [b4_syncline(74, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_uniop(program,]b4_rhs_value(4, 3, [[id]])[)->rebound(]b4_rhs_value(4, 1, [[id]])[)->rebound(]b4_rhs_value(4, 4, [[id]])[); }]])

b4_case(7, [b4_syncline(76, [["rule.y"]])
[    {]b4_lhs_value([[id]])[=helper_biop(body,]b4_rhs_value(4, 1, [[id]])[,]b4_rhs_value(4, 3, [[id]])[)->rebound(]b4_rhs_value(4, 4, [[id]])[);}]])

b4_case(8, [b4_syncline(78, [["rule.y"]])
[    {]b4_lhs_value([[id]])[=extract_id_list("declaration_list",]b4_rhs_value(1, 1, [[ids]])[);}]])

b4_case(9, [b4_syncline(80, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=new vector<node_t *>();]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(1, 1, [[id]])[);}]])

b4_case(10, [b4_syncline(81, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=]b4_rhs_value(2, 1, [[ids]])[;]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(2, 2, [[id]])[);}]])

b4_case(12, [b4_syncline(84, [["rule.y"]])
[    {]b4_lhs_value([[id]])[ = ]b4_rhs_value(2, 2, [[id]])[->rebound(]b4_rhs_value(2, 1, [[id]])[);}]])

b4_case(13, [b4_syncline(85, [["rule.y"]])
[    {]b4_lhs_value([[id]])[ = ]b4_rhs_value(2, 2, [[id]])[->rebound(]b4_rhs_value(2, 1, [[id]])[);}]])

b4_case(14, [b4_syncline(86, [["rule.y"]])
[    {]b4_lhs_value([[id]])[ = ]b4_rhs_value(2, 2, [[id]])[->rebound(]b4_rhs_value(2, 1, [[id]])[);}]])

b4_case(15, [b4_syncline(88, [["rule.y"]])
[    {]b4_lhs_value([[id]])[=extract_id_list("var_decl_list",]b4_rhs_value(1, 1, [[ids]])[);}]])

b4_case(16, [b4_syncline(90, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=new vector<node_t *>();]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(1, 1, [[id]])[);}]])

b4_case(17, [b4_syncline(91, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=]b4_rhs_value(2, 1, [[ids]])[;]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(2, 2, [[id]])[);}]])

b4_case(18, [b4_syncline(93, [["rule.y"]])
[    {]b4_lhs_value([[id]])[ = helper_biop(var_decl,]b4_rhs_value(4, 1, [[id]])[,]b4_rhs_value(4, 3, [[id]])[)->rebound(]b4_rhs_value(4, 4, [[id]])[);}]])

b4_case(19, [b4_syncline(94, [["rule.y"]])
[    {]b4_lhs_value([[id]])[ = helper_triop(var_decl,]b4_rhs_value(6, 1, [[id]])[,]b4_rhs_value(6, 3, [[id]])[,]b4_rhs_value(6, 5, [[id]])[)->rebound(]b4_rhs_value(6, 6, [[id]])[);}]])

b4_case(20, [b4_syncline(96, [["rule.y"]])
[    {]b4_lhs_value([[id]])[=extract_id_list("type_decl_list",]b4_rhs_value(1, 1, [[ids]])[);}]])

b4_case(21, [b4_syncline(98, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=new vector<node_t *>();]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(1, 1, [[id]])[);}]])

b4_case(22, [b4_syncline(99, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=]b4_rhs_value(2, 1, [[ids]])[;]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(2, 2, [[id]])[);}]])

b4_case(23, [b4_syncline(101, [["rule.y"]])
[    {]b4_lhs_value([[id]])[ = helper_biop(type_decl,]b4_rhs_value(4, 1, [[id]])[,]b4_rhs_value(4, 3, [[id]])[)->rebound(]b4_rhs_value(4, 4, [[id]])[);}]])

b4_case(24, [b4_syncline(103, [["rule.y"]])
[    {]b4_lhs_value([[id]])[=extract_id_list("procedure_decl_list",]b4_rhs_value(1, 1, [[ids]])[);}]])

b4_case(25, [b4_syncline(105, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=new vector<node_t *>();]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(1, 1, [[id]])[);}]])

b4_case(26, [b4_syncline(106, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=]b4_rhs_value(2, 1, [[ids]])[;]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(2, 2, [[id]])[);}]])

b4_case(27, [b4_syncline(108, [["rule.y"]])
[    {]b4_lhs_value([[id]])[ = helper_triop(procedure_decl,]b4_rhs_value(5, 1, [[id]])[,]b4_rhs_value(5, 2, [[id]])[,]b4_rhs_value(5, 4, [[id]])[)->rebound(]b4_rhs_value(5, 5, [[id]])[);}]])

b4_case(28, [b4_syncline(109, [["rule.y"]])
[    {]b4_lhs_value([[id]])[ = helper_quadop(procedure_decl,]b4_rhs_value(7, 1, [[id]])[,]b4_rhs_value(7, 2, [[id]])[,]b4_rhs_value(7, 4, [[id]])[,]b4_rhs_value(7, 6, [[id]])[)->rebound(]b4_rhs_value(7, 7, [[id]])[);}]])

b4_case(30, [b4_syncline(112, [["rule.y"]])
[    {]b4_lhs_value([[id]])[ = helper_uniop(brackets,]b4_rhs_value(3, 3, [[id]])[)->rebound(]b4_rhs_value(3, 1, [[id]])[);}]])

b4_case(31, [b4_syncline(113, [["rule.y"]])
[    {]b4_lhs_value([[id]])[ = helper_uniop(record_components,]b4_rhs_value(3, 2, [[id]])[)->rebound(]b4_rhs_value(3, 1, [[id]])[)->rebound(]b4_rhs_value(3, 3, [[id]])[);}]])

b4_case(32, [b4_syncline(115, [["rule.y"]])
[    {]b4_lhs_value([[id]])[=extract_id_list("component_list",]b4_rhs_value(1, 1, [[ids]])[);}]])

b4_case(33, [b4_syncline(117, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=new vector<node_t *>();]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(1, 1, [[id]])[);}]])

b4_case(34, [b4_syncline(118, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=]b4_rhs_value(2, 1, [[ids]])[;]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(2, 2, [[id]])[);}]])

b4_case(35, [b4_syncline(120, [["rule.y"]])
[    {]b4_lhs_value([[id]])[ = helper_biop(component,]b4_rhs_value(4, 1, [[id]])[,]b4_rhs_value(4, 3, [[id]])[)->rebound(]b4_rhs_value(4, 4, [[id]])[);}]])

b4_case(36, [b4_syncline(122, [["rule.y"]])
[    {]b4_lhs_value([[id]])[ = create_virtual_node("formal_params",0)->rebound(]b4_rhs_value(2, 1, [[id]])[)->rebound(]b4_rhs_value(2, 2, [[id]])[);}]])

b4_case(37, [b4_syncline(123, [["rule.y"]])
[    {]b4_lhs_value([[id]])[=extract_id_list("formal_params",]b4_rhs_value(2, 1, [[ids]])[,]b4_rhs_value(2, 2, [[id]])[);}]])

b4_case(38, [b4_syncline(125, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=new vector<node_t *>();]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(2, 1, [[id]])[);]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(2, 2, [[id]])[);}]])

b4_case(39, [b4_syncline(126, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=]b4_rhs_value(3, 1, [[ids]])[;]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(3, 3, [[id]])[);}]])

b4_case(40, [b4_syncline(128, [["rule.y"]])
[    {]b4_lhs_value([[id]])[ = helper_biop(fp_section,]b4_rhs_value(3, 1, [[id]])[,]b4_rhs_value(3, 3, [[id]])[);}]])

b4_case(41, [b4_syncline(130, [["rule.y"]])
[    {]b4_lhs_value([[id]])[=extract_id_list("id_list",]b4_rhs_value(1, 1, [[ids]])[);}]])

b4_case(42, [b4_syncline(132, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=new vector<node_t *>();]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(1, 1, [[id]])[);}]])

b4_case(43, [b4_syncline(133, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=]b4_rhs_value(3, 1, [[ids]])[;]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(3, 3, [[id]])[);}]])

b4_case(44, [b4_syncline(135, [["rule.y"]])
[    {]b4_lhs_value([[id]])[=extract_id_list("lvalue_list",]b4_rhs_value(1, 1, [[ids]])[);}]])

b4_case(45, [b4_syncline(137, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=new vector<node_t *>();]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(1, 1, [[id]])[);}]])

b4_case(46, [b4_syncline(138, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=]b4_rhs_value(3, 1, [[ids]])[;]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(3, 3, [[id]])[);}]])

b4_case(47, [b4_syncline(140, [["rule.y"]])
[    {]b4_lhs_value([[id]])[=extract_id_list("statement_list",]b4_rhs_value(1, 1, [[ids]])[);}]])

b4_case(48, [b4_syncline(142, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=new vector<node_t *>();]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(1, 1, [[id]])[);}]])

b4_case(49, [b4_syncline(143, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=]b4_rhs_value(2, 1, [[ids]])[;]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(2, 2, [[id]])[);}]])

b4_case(50, [b4_syncline(145, [["rule.y"]])
[    {]b4_lhs_value([[id]])[=extract_id_list("elsif_sentence_list",]b4_rhs_value(1, 1, [[ids]])[);}]])

b4_case(51, [b4_syncline(147, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=new vector<node_t *>();]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(1, 1, [[id]])[);}]])

b4_case(52, [b4_syncline(148, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=]b4_rhs_value(2, 1, [[ids]])[;]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(2, 2, [[id]])[);}]])

b4_case(53, [b4_syncline(150, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(elsif_sentence,]b4_rhs_value(4, 2, [[id]])[,]b4_rhs_value(4, 4, [[id]])[)->rebound(]b4_rhs_value(4, 1, [[id]])[); }]])

b4_case(54, [b4_syncline(152, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(assign,]b4_rhs_value(4, 1, [[id]])[,]b4_rhs_value(4, 3, [[id]])[)->rebound(]b4_rhs_value(4, 4, [[id]])[); }]])

b4_case(55, [b4_syncline(153, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(procedure_call,]b4_rhs_value(3, 1, [[id]])[,]b4_rhs_value(3, 2, [[id]])[)->rebound(]b4_rhs_value(3, 3, [[id]])[); }]])

b4_case(56, [b4_syncline(154, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_uniop(read,]b4_rhs_value(5, 3, [[id]])[)->rebound(]b4_rhs_value(5, 1, [[id]])[)->rebound(]b4_rhs_value(5, 5, [[id]])[); }]])

b4_case(57, [b4_syncline(155, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_uniop(write,]b4_rhs_value(3, 2, [[id]])[)->rebound(]b4_rhs_value(3, 1, [[id]])[)->rebound(]b4_rhs_value(3, 3, [[id]])[); }]])

b4_case(58, [b4_syncline(156, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(if,]b4_rhs_value(6, 2, [[id]])[,]b4_rhs_value(6, 4, [[id]])[)->rebound(]b4_rhs_value(6, 1, [[id]])[)->rebound(]b4_rhs_value(6, 6, [[id]])[); }]])

b4_case(59, [b4_syncline(157, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_triop(if,]b4_rhs_value(7, 2, [[id]])[,]b4_rhs_value(7, 4, [[id]])[,]b4_rhs_value(7, 5, [[id]])[)->rebound(]b4_rhs_value(7, 1, [[id]])[)->rebound(]b4_rhs_value(7, 7, [[id]])[); }]])

b4_case(60, [b4_syncline(158, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_triop(if_else,]b4_rhs_value(8, 2, [[id]])[,]b4_rhs_value(8, 4, [[id]])[,]b4_rhs_value(8, 6, [[id]])[)->rebound(]b4_rhs_value(8, 1, [[id]])[)->rebound(]b4_rhs_value(8, 8, [[id]])[); }]])

b4_case(61, [b4_syncline(159, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_quadop(if_else,]b4_rhs_value(9, 2, [[id]])[,]b4_rhs_value(9, 4, [[id]])[,]b4_rhs_value(9, 5, [[id]])[,]b4_rhs_value(9, 7, [[id]])[)->rebound(]b4_rhs_value(9, 1, [[id]])[)->rebound(]b4_rhs_value(9, 9, [[id]])[); }]])

b4_case(62, [b4_syncline(160, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(while,]b4_rhs_value(6, 2, [[id]])[,]b4_rhs_value(6, 4, [[id]])[)->rebound(]b4_rhs_value(6, 1, [[id]])[)->rebound(]b4_rhs_value(6, 6, [[id]])[); }]])

b4_case(63, [b4_syncline(161, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_uniop(write,]b4_rhs_value(4, 2, [[id]])[)->rebound(]b4_rhs_value(4, 1, [[id]])[)->rebound(]b4_rhs_value(4, 4, [[id]])[); }]])

b4_case(64, [b4_syncline(162, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_quadop(while,]b4_rhs_value(10, 2, [[id]])[,]b4_rhs_value(10, 4, [[id]])[,]b4_rhs_value(10, 6, [[id]])[,]b4_rhs_value(10, 8, [[id]])[)->rebound(]b4_rhs_value(10, 1, [[id]])[)->rebound(]b4_rhs_value(10, 10, [[id]])[); }]])

b4_case(65, [b4_syncline(163, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_quinop(while,]b4_rhs_value(12, 2, [[id]])[,]b4_rhs_value(12, 4, [[id]])[,]b4_rhs_value(12, 6, [[id]])[,]b4_rhs_value(12, 8, [[id]])[,]b4_rhs_value(12, 10, [[id]])[)->rebound(]b4_rhs_value(12, 1, [[id]])[)->rebound(]b4_rhs_value(12, 12, [[id]])[); }]])

b4_case(66, [b4_syncline(164, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = create_virtual_node("exit",0)->rebound(]b4_rhs_value(2, 1, [[id]])[)->rebound(]b4_rhs_value(2, 2, [[id]])[); }]])

b4_case(67, [b4_syncline(165, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_uniop(return,]b4_rhs_value(3, 2, [[id]])[)->rebound(]b4_rhs_value(3, 1, [[id]])[)->rebound(]b4_rhs_value(3, 3, [[id]])[); }]])

b4_case(68, [b4_syncline(168, [["rule.y"]])
[    {]b4_lhs_value([[id]])[ = create_virtual_node("write_params",0)->rebound(]b4_rhs_value(2, 1, [[id]])[)->rebound(]b4_rhs_value(2, 2, [[id]])[);}]])

b4_case(69, [b4_syncline(169, [["rule.y"]])
[    {]b4_lhs_value([[id]])[=extract_id_list("write_params",]b4_rhs_value(2, 1, [[ids]])[,]b4_rhs_value(2, 2, [[id]])[);}]])

b4_case(70, [b4_syncline(171, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=new vector<node_t *>();]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(2, 1, [[id]])[);]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(2, 2, [[id]])[);}]])

b4_case(71, [b4_syncline(172, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=]b4_rhs_value(3, 1, [[ids]])[;]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(3, 3, [[id]])[);}]])

b4_case(76, [b4_syncline(180, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(or,]b4_rhs_value(3, 1, [[id]])[,]b4_rhs_value(3, 3, [[id]])[); }]])

b4_case(78, [b4_syncline(183, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(and,]b4_rhs_value(3, 1, [[id]])[,]b4_rhs_value(3, 3, [[id]])[); }]])

b4_case(80, [b4_syncline(186, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(lt,]b4_rhs_value(3, 1, [[id]])[,]b4_rhs_value(3, 3, [[id]])[); }]])

b4_case(81, [b4_syncline(187, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(gt,]b4_rhs_value(3, 1, [[id]])[,]b4_rhs_value(3, 3, [[id]])[); }]])

b4_case(82, [b4_syncline(188, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(le,]b4_rhs_value(3, 1, [[id]])[,]b4_rhs_value(3, 3, [[id]])[); }]])

b4_case(83, [b4_syncline(189, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(ge,]b4_rhs_value(3, 1, [[id]])[,]b4_rhs_value(3, 3, [[id]])[); }]])

b4_case(84, [b4_syncline(190, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(eq,]b4_rhs_value(3, 1, [[id]])[,]b4_rhs_value(3, 3, [[id]])[); }]])

b4_case(85, [b4_syncline(191, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(neq,]b4_rhs_value(3, 1, [[id]])[,]b4_rhs_value(3, 3, [[id]])[); }]])

b4_case(87, [b4_syncline(194, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(add,]b4_rhs_value(3, 1, [[id]])[,]b4_rhs_value(3, 3, [[id]])[); }]])

b4_case(88, [b4_syncline(195, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(subtract,]b4_rhs_value(3, 1, [[id]])[,]b4_rhs_value(3, 3, [[id]])[); }]])

b4_case(90, [b4_syncline(198, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(multiply,]b4_rhs_value(3, 1, [[id]])[,]b4_rhs_value(3, 3, [[id]])[); }]])

b4_case(91, [b4_syncline(199, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(divide,]b4_rhs_value(3, 1, [[id]])[,]b4_rhs_value(3, 3, [[id]])[); }]])

b4_case(92, [b4_syncline(200, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(div,]b4_rhs_value(3, 1, [[id]])[,]b4_rhs_value(3, 3, [[id]])[); }]])

b4_case(93, [b4_syncline(201, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(mod,]b4_rhs_value(3, 1, [[id]])[,]b4_rhs_value(3, 3, [[id]])[); }]])

b4_case(95, [b4_syncline(204, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_uniop(positive,]b4_rhs_value(2, 2, [[id]])[)->rebound(]b4_rhs_value(2, 1, [[id]])[); }]])

b4_case(96, [b4_syncline(205, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_uniop(negative,]b4_rhs_value(2, 2, [[id]])[)->rebound(]b4_rhs_value(2, 1, [[id]])[); }]])

b4_case(97, [b4_syncline(206, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_uniop(not,]b4_rhs_value(2, 2, [[id]])[)->rebound(]b4_rhs_value(2, 1, [[id]])[); }]])

b4_case(100, [b4_syncline(210, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_uniop(brackets,]b4_rhs_value(3, 2, [[id]])[)->rebound(]b4_rhs_value(3, 1, [[id]])[)->rebound(]b4_rhs_value(3, 3, [[id]])[); }]])

b4_case(101, [b4_syncline(211, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(function_call,]b4_rhs_value(2, 1, [[id]])[,]b4_rhs_value(2, 2, [[id]])[); }]])

b4_case(102, [b4_syncline(212, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(record_construction,]b4_rhs_value(2, 1, [[id]])[,]b4_rhs_value(2, 2, [[id]])[); }]])

b4_case(103, [b4_syncline(213, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(array_construction,]b4_rhs_value(2, 1, [[id]])[,]b4_rhs_value(2, 2, [[id]])[); }]])

b4_case(104, [b4_syncline(214, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = ]b4_rhs_value(1, 1, [[id]])[; }]])

b4_case(105, [b4_syncline(215, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = ]b4_rhs_value(1, 1, [[id]])[; }]])

b4_case(106, [b4_syncline(216, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = ]b4_rhs_value(1, 1, [[id]])[; }]])

b4_case(108, [b4_syncline(220, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(element_deref,]b4_rhs_value(4, 1, [[id]])[,]b4_rhs_value(4, 3, [[id]])[)->rebound(]b4_rhs_value(4, 4, [[id]])[); }]])

b4_case(109, [b4_syncline(221, [["rule.y"]])
[    { ]b4_lhs_value([[id]])[ = helper_biop(comp_deref,]b4_rhs_value(3, 1, [[id]])[,]b4_rhs_value(3, 3, [[id]])[); }]])

b4_case(110, [b4_syncline(223, [["rule.y"]])
[    {]b4_lhs_value([[id]])[ = create_virtual_node("actual_params",0)->rebound(]b4_rhs_value(2, 1, [[id]])[)->rebound(]b4_rhs_value(2, 2, [[id]])[);}]])

b4_case(111, [b4_syncline(224, [["rule.y"]])
[    {]b4_lhs_value([[id]])[=extract_id_list("actual_params",]b4_rhs_value(2, 1, [[ids]])[,]b4_rhs_value(2, 2, [[id]])[);}]])

b4_case(112, [b4_syncline(226, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=new vector<node_t *>();]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(2, 1, [[id]])[);]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(2, 2, [[id]])[);}]])

b4_case(113, [b4_syncline(227, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=]b4_rhs_value(3, 1, [[ids]])[;]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(3, 3, [[id]])[);}]])

b4_case(114, [b4_syncline(229, [["rule.y"]])
[    {]b4_lhs_value([[id]])[=extract_id_list("comp_values",]b4_rhs_value(2, 1, [[ids]])[,]b4_rhs_value(2, 2, [[id]])[);}]])

b4_case(115, [b4_syncline(231, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=new vector<node_t *>();]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(2, 1, [[id]])[);]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(2, 2, [[id]])[);}]])

b4_case(116, [b4_syncline(232, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=]b4_rhs_value(3, 1, [[ids]])[;]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(3, 3, [[id]])[);}]])

b4_case(117, [b4_syncline(234, [["rule.y"]])
[    {]b4_lhs_value([[id]])[=helper_biop(comp_value_pair,]b4_rhs_value(3, 1, [[id]])[,]b4_rhs_value(3, 3, [[id]])[);}]])

b4_case(118, [b4_syncline(236, [["rule.y"]])
[    {]b4_lhs_value([[id]])[=extract_id_list("array_values",]b4_rhs_value(2, 1, [[ids]])[,]b4_rhs_value(2, 2, [[id]])[);}]])

b4_case(119, [b4_syncline(238, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=new vector<node_t *>();]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(2, 1, [[id]])[);]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(2, 2, [[id]])[);}]])

b4_case(120, [b4_syncline(239, [["rule.y"]])
[    {]b4_lhs_value([[ids]])[=]b4_rhs_value(3, 1, [[ids]])[;]b4_lhs_value([[ids]])[->push_back(]b4_rhs_value(3, 3, [[id]])[);}]])

b4_case(122, [b4_syncline(243, [["rule.y"]])
[    {]b4_lhs_value([[id]])[=helper_biop(array_value_pair,]b4_rhs_value(3, 1, [[id]])[,]b4_rhs_value(3, 3, [[id]])[);}]])

])

m4_define([b4_mergers], 
[[]])

m4_define([b4_tokens], 
[[[[NUMBER]], 258],
[[[INVALID]], 259],
[[[ID]], 260],
[[[STRING]], 261],
[[[IGNORED]], 262],
[[[PROGRAM]], 263],
[[[IS]], 264],
[[[BEGINT]], 265],
[[[END]], 266],
[[[VAR]], 267],
[[[TYPE]], 268],
[[[PROCEDURE]], 269],
[[[ARRAY]], 270],
[[[RECORD]], 271],
[[[IN]], 272],
[[[OUT]], 273],
[[[READ]], 274],
[[[WRITE]], 275],
[[[IF]], 276],
[[[THEN]], 277],
[[[ELSE]], 278],
[[[ELSIF]], 279],
[[[WHILE]], 280],
[[[DO]], 281],
[[[LOOP]], 282],
[[[FOR]], 283],
[[[EXIT]], 284],
[[[RETURN]], 285],
[[[TO]], 286],
[[[BY]], 287],
[[[AND]], 288],
[[[OR]], 289],
[[[NOT]], 290],
[[[OF]], 291],
[[[DIV]], 292],
[[[MOD]], 293],
[[[LPAREN]], 294],
[[[RPAREN]], 295],
[[[LBRACKET]], 296],
[[[RBRACKET]], 297],
[[[LBRACE]], 298],
[[[RBRACE]], 299],
[[[COLON]], 300],
[[[DOT]], 301],
[[[SEMICOLON]], 302],
[[[COMMA]], 303],
[[[ASSIGN]], 304],
[[[PLUS]], 305],
[[[MINUS]], 306],
[[[STAR]], 307],
[[[SLASH]], 308],
[[[BACKSLASH]], 309],
[[[EQ]], 310],
[[[NEQ]], 311],
[[[LT]], 312],
[[[LE]], 313],
[[[GT]], 314],
[[[GE]], 315],
[[[LABRACKET]], 316],
[[[RABRACKET]], 317],
[[[TRUE]], 318],
[[[FALSE]], 319],
[[[NIL]], 320],
[[[EOL]], 321],
[[[EOFT]], 322]])

m4_define([b4_symbol_destructors], 
[])

m4_define([b4_symbol_printers], 
[])

m4_define([b4_translate],
[[     0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67]])


m4_define([b4_use_push_for_pull_flag],
[[0]])


m4_define([b4_pact_ninf],
[[-197]])


m4_define([b4_conflict_list_heads],
[[     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0]])


m4_define([b4_toknum_max],
[[322]])


m4_define([b4_rhs],
[[    69,     0,    -1,    -1,    69,   100,    66,    -1,    69,   104,
      66,    -1,    69,    70,    67,    -1,     8,     9,    71,    47,
      -1,    72,    10,    95,    11,    -1,    73,    -1,    74,    -1,
      73,    74,    -1,    -1,    12,    75,    -1,    13,    78,    -1,
      14,    81,    -1,    76,    -1,    77,    -1,    76,    77,    -1,
      91,    49,   104,    47,    -1,    91,    45,    84,    49,   104,
      47,    -1,    79,    -1,    80,    -1,    79,    80,    -1,     5,
       9,    84,    47,    -1,    82,    -1,    83,    -1,    82,    83,
      -1,     5,    88,     9,    71,    47,    -1,     5,    88,    45,
      84,     9,    71,    47,    -1,     5,    -1,    15,    36,    84,
      -1,    16,    85,    11,    -1,    86,    -1,    87,    -1,    86,
      87,    -1,     5,    45,    84,    47,    -1,    39,    40,    -1,
      89,    40,    -1,    39,    90,    -1,    89,    47,    90,    -1,
      91,    45,    84,    -1,    92,    -1,     5,    -1,    92,    48,
       5,    -1,    94,    -1,     5,    -1,    94,    48,     5,    -1,
      96,    -1,   100,    -1,    96,   100,    -1,    98,    -1,    99,
      -1,    98,    99,    -1,    24,   104,    22,    95,    -1,   112,
      49,   104,    47,    -1,     5,   113,    47,    -1,    19,    39,
      93,    40,    47,    -1,    20,   101,    47,    -1,    21,   104,
      22,    95,    11,    47,    -1,    21,   104,    22,    95,    97,
      11,    47,    -1,    21,   104,    22,    95,    23,    95,    11,
      47,    -1,    21,   104,    22,    95,    97,    23,    95,    11,
      47,    -1,    25,   104,    26,    95,    11,    47,    -1,    27,
      95,    11,    47,    -1,    28,     5,    49,   104,    31,   104,
      26,    95,    11,    47,    -1,    28,     5,    49,   104,    31,
     104,    32,   104,    26,    95,    11,    47,    -1,    29,    47,
      -1,    30,   104,    47,    -1,    39,    40,    -1,   102,    40,
      -1,    39,   103,    -1,   102,    48,   103,    -1,     6,    -1,
     104,    -1,   105,    -1,   106,    -1,   105,    34,   106,    -1,
     107,    -1,   106,    33,   107,    -1,   108,    -1,   108,    57,
     108,    -1,   108,    59,   108,    -1,   108,    58,   108,    -1,
     108,    60,   108,    -1,   108,    55,   108,    -1,   108,    56,
     108,    -1,   109,    -1,   108,    50,   109,    -1,   108,    51,
     109,    -1,   110,    -1,   109,    52,   110,    -1,   109,    53,
     110,    -1,   109,    37,   110,    -1,   109,    38,   110,    -1,
     111,    -1,    50,   110,    -1,    51,   110,    -1,    35,   110,
      -1,     3,    -1,   112,    -1,    39,   104,    40,    -1,     5,
     113,    -1,     5,   115,    -1,     5,   118,    -1,    63,    -1,
      64,    -1,    65,    -1,     5,    -1,   112,    41,   104,    42,
      -1,   112,    46,     5,    -1,    39,    40,    -1,   114,    40,
      -1,    39,   104,    -1,   114,    48,   104,    -1,   116,    44,
      -1,    43,   117,    -1,   116,    47,   117,    -1,     5,    49,
     104,    -1,   119,    62,    -1,    61,   120,    -1,   119,    48,
     120,    -1,   104,    -1,   104,    36,   104,    -1]])


m4_define([b4_last],
[[270]])


m4_define([b4_stos_min],
[[0]])


m4_define([b4_tag_seen_flag],
[[1]])


m4_define([b4_token_table_flag],
[[0]])


m4_define([b4_parser_file_name],
[[Generated/rule.tab.cpp]])


m4_define([b4_table_min],
[[0]])


m4_define([b4_table],
[[    31,    22,   163,   164,    23,   202,   224,    93,   201,    54,
      41,    47,    49,   210,   198,    32,    57,   184,    59,    33,
     143,    94,   192,    79,    58,   211,    60,    61,    80,   185,
     186,    81,   193,   194,    79,    83,   201,    34,    56,    80,
       2,   203,   225,     3,   248,     4,   108,   181,     5,   172,
      42,    54,   117,   173,   233,   199,    75,    76,    89,     6,
       7,     8,   238,    67,    68,     9,    90,    10,    11,    12,
      13,    77,    78,   246,   208,    14,   204,    91,    43,    15,
      92,   110,   135,   205,   137,   131,   132,   133,   134,   111,
      16,    17,   231,   140,    95,    96,    97,    55,   232,     3,
     230,    46,   105,    18,    19,    20,   112,     3,    63,    46,
     115,    62,    54,    54,   108,   123,   124,   242,    64,    65,
     244,   166,    66,    84,    88,   102,     3,   109,    46,   105,
     113,    14,   114,    32,   119,    15,   106,   116,   120,    14,
     255,   169,   170,    15,    82,   136,    16,    17,   125,   126,
     127,   128,   129,   130,    16,    17,   118,    54,    14,    18,
      19,    20,    15,   138,     3,   139,    46,    18,    19,    20,
     143,   149,   153,    16,    17,   157,   196,   160,   158,   161,
     165,   167,   168,    50,    54,   175,    18,    19,    20,   209,
     174,   177,   182,   183,   214,   190,    14,     6,     7,     8,
      15,   191,   197,     9,   206,    10,    11,    12,    13,   207,
      54,    16,    17,   186,   216,   215,   213,   227,   223,   221,
     220,   222,   228,   237,    18,    19,    20,    54,   234,   229,
      54,    67,    68,   235,   239,   245,    69,    70,    71,    72,
      73,    74,   240,   241,   251,   243,   247,   250,   249,   252,
      54,   253,   254,   256,   257,   159,   171,   180,   226,   212,
     176,   236,   162,   121,     0,     0,     0,   141,     0,   122,
     142]])


m4_define([b4_conflicting_rules_max],
[[0]])


m4_define([b4_merger],
[[     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0]])


m4_define([b4_glr_flag],
[[0]])


m4_define([b4_percent_define_syncline(lr.keep-unreachable-states)],
[[]])


m4_define([b4_check_max],
[[251]])


m4_define([b4_spec_graph_file],
[[]])


m4_define([b4_rline_min],
[[0]])


m4_define([b4_toknum],
[[     0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322]])


m4_define([b4_defgoto_max],
[[219]])


m4_define([b4_version],
[[2.7]])


m4_define([b4_translate_min],
[[0]])


m4_define([b4_stype],
[[]b4_syncline(39, [["rule.y"]])[

    struct node_t* id;
    vector<node_t *> *ids;

]])


m4_define([b4_pkgdatadir],
[[C:\Program Files (x86)\win_flex_bison-latest\data]])


m4_define([b4_pgoto_min],
[[-197]])


m4_define([b4_rhs_max],
[[120]])


m4_define([b4_pgoto],
[[  -197,  -197,  -197,  -196,  -197,  -197,   155,  -197,  -197,   111,
    -197,  -197,   109,  -197,  -197,   102,  -161,  -197,  -197,    43,
    -197,  -197,    53,  -169,  -197,  -197,  -197,  -111,  -197,  -197,
    -197,    71,     0,  -197,  -197,   151,     3,  -197,   198,   203,
      79,    48,    10,  -197,    -1,    60,  -197,  -197,  -197,   175,
    -197,  -197,   177]])


m4_define([b4_pact_max],
[[242]])


m4_define([b4_debug_flag],
[[0]])


m4_define([b4_yacc_flag],
[[0]])


m4_define([b4_spec_verbose_file],
[[]])


m4_define([b4_conflict_list_heads_min],
[[0]])


m4_define([b4_tname],
[["$][end", "error", "$][undefined", "NUMBER", "INVALID", "ID", "STRING",
  "IGNORED", "PROGRAM", "IS", "BEGINT", "END", "VAR", "TYPE", "PROCEDURE",
  "ARRAY", "RECORD", "IN", "OUT", "READ", "WRITE", "IF", "THEN", "ELSE",
  "ELSIF", "WHILE", "DO", "LOOP", "FOR", "EXIT", "RETURN", "TO", "BY",
  "AND", "OR", "NOT", "OF", "DIV", "MOD", "LPAREN", "RPAREN", "LBRACKET",
  "RBRACKET", "LBRACE", "RBRACE", "COLON", "DOT", "SEMICOLON", "COMMA",
  "ASSIGN", "PLUS", "MINUS", "STAR", "SLASH", "BACKSLASH", "EQ", "NEQ",
  "LT", "LE", "GT", "GE", "LABRACKET", "RABRACKET", "TRUE", "FALSE", "NIL",
  "EOL", "EOFT", "$][accept", "calc", "program", "body", "declaration_list",
  "declaration_list_suffix", "declaration", "var_decl_list",
  "var_decl_list_suffix", "var_decl", "type_decl_list",
  "type_decl_list_suffix", "type_decl", "procedure_decl_list",
  "procedure_decl_list_suffix", "procedure_decl", "type", "component_list",
  "component_list_suffix", "component", "formal_params",
  "formal_params_suffix", "fp_section", "id_list", "id_list_suffix",
  "lvalue_list", "lvalue_list_suffix", "statement_list",
  "statement_list_suffix", "elsif_sentence_list",
  "elsif_sentence_list_suffix", "elsif_sentence", "statement",
  "write_params", "write_params_suffix", "write_expr", "expression",
  "or_operand", "and_operand", "relationship", "summand", "factor",
  "unary", "term", "lvalue", "actual_params", "actual_params_suffix",
  "comp_values", "comp_values_suffix", "comp_value", "array_values",
  "array_values_suffix", "array_value", ]b4_null[]])


m4_define([b4_defact],
[[     2,     0,     1,    98,   107,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   104,   105,
     106,     0,     0,     0,    74,    75,    77,    79,    86,    89,
      94,    99,     0,     0,     0,   101,     0,   102,     0,   103,
       0,    11,     0,     0,     0,     0,   107,     0,    99,     0,
     107,     0,    47,    48,     0,     0,    66,     0,    97,     0,
      95,    96,     5,     3,     4,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   110,   112,     0,   115,   121,   119,    55,   111,
       0,   114,     0,     0,   118,     0,     0,     0,     0,     0,
       8,     9,    45,     0,    44,    72,    68,    70,    73,    57,
      69,     0,   101,     0,     0,     0,     0,    49,     0,    67,
     100,    76,    78,    87,    88,    84,    85,    80,    82,    81,
      83,    92,    93,    90,    91,     0,   109,     0,     0,     0,
     113,   116,   120,    42,    12,    15,    16,     0,    41,     0,
      13,    20,    21,     0,    14,    24,    25,     6,     0,    10,
       0,     0,    71,     0,     0,    63,     0,   108,    54,   117,
     122,    17,     0,     0,     0,     0,    22,     0,     0,     0,
      26,     0,    56,    46,     0,     0,     0,     0,    50,    51,
       0,     0,    29,     0,     0,     0,     0,    43,     0,    36,
      38,     0,    11,     0,    37,     0,     7,    58,     0,     0,
       0,     0,    52,    62,     0,     0,     0,     0,    32,    33,
       0,    18,    23,     0,     0,     0,    39,     0,     0,    59,
       0,     0,     0,    30,     0,    31,    34,     0,    40,    27,
      11,    60,    53,     0,     0,     0,     0,    19,     0,    61,
       0,     0,    35,    28,    64,     0,     0,    65]])


m4_define([b4_tokens_number],
[[68]])


m4_define([b4_stos_max],
[[120]])


m4_define([b4_merger_min],
[[0]])


m4_define([b4_table_max],
[[257]])


m4_define([b4_spec_name_prefix],
[[]])


m4_define([b4_epilogue],
[[]b4_syncline(256, [["rule.y"]])[

]])


m4_define([b4_table_ninf],
[[-1]])


m4_define([b4_prhs],
[[     0,     0,     3,     4,     8,    12,    16,    21,    26,    28,
      30,    33,    34,    37,    40,    43,    45,    47,    50,    55,
      62,    64,    66,    69,    74,    76,    78,    81,    87,    95,
      97,   101,   105,   107,   109,   112,   117,   120,   123,   126,
     130,   134,   136,   138,   142,   144,   146,   150,   152,   154,
     157,   159,   161,   164,   169,   174,   178,   184,   188,   195,
     203,   212,   222,   229,   234,   245,   258,   261,   265,   268,
     271,   274,   278,   280,   282,   284,   286,   290,   292,   296,
     298,   302,   306,   310,   314,   318,   322,   324,   328,   332,
     334,   338,   342,   346,   350,   352,   355,   358,   361,   363,
     365,   369,   372,   375,   378,   380,   382,   384,   386,   391,
     395,   398,   401,   404,   408,   411,   414,   418,   422,   425,
     428,   432,   434]])


m4_define([b4_check],
[[     1,     1,   113,   114,     1,     9,   202,    48,   177,    10,
       9,     8,     9,    11,   175,    39,    13,    11,    15,    43,
       5,    62,     5,    41,    14,    23,    16,    17,    46,    23,
      24,    49,    15,    16,    41,    32,   205,    61,    47,    46,
       0,    45,   203,     3,   240,     5,    43,   158,     8,    45,
      39,    52,    52,    49,   215,    40,    37,    38,    40,    19,
      20,    21,   223,    50,    51,    25,    48,    27,    28,    29,
      30,    52,    53,   234,   185,    35,    40,    44,    39,    39,
      47,    40,    79,    47,    81,    75,    76,    77,    78,    48,
      50,    51,    26,    90,    12,    13,    14,     5,    32,     3,
     211,     5,     6,    63,    64,    65,    46,     3,    66,     5,
      50,    67,   113,   114,   111,    67,    68,   228,    66,    34,
     231,   118,    33,     5,    47,     5,     3,    47,     5,     6,
      22,    35,    26,    39,    47,    39,    40,    11,    40,    35,
     251,   138,   139,    39,    40,     5,    50,    51,    69,    70,
      71,    72,    73,    74,    50,    51,    49,   158,    35,    63,
      64,    65,    39,    49,     3,    36,     5,    63,    64,    65,
       5,     5,     5,    50,    51,    47,   173,    40,    10,    48,
      47,    42,    47,     5,   185,     9,    63,    64,    65,   186,
      48,    39,    47,     5,   191,    11,    35,    19,    20,    21,
      39,    31,     5,    25,    11,    27,    28,    29,    30,    47,
     211,    50,    51,    24,     5,    36,    47,    11,    45,    47,
      49,    47,    22,   220,    63,    64,    65,   228,    45,    47,
     231,    50,    51,    11,    47,   232,    55,    56,    57,    58,
      59,    60,     9,    47,    26,    11,    47,    11,    47,    47,
     251,    47,    47,    11,    47,   100,   145,   155,   205,   188,
     151,   218,   111,    65,    -1,    -1,    -1,    92,    -1,    66,
      93]])


m4_define([b4_nterms_number],
[[53]])


m4_define([b4_rline_max],
[[243]])


m4_define([b4_dprec],
[[     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0]])


m4_define([b4_percent_define_loc(lr.default-reductions)],
[[[[<default value>:-1.-1]], [[<default value>:-1.-1]]]])


m4_define([b4_rline],
[[     0,    68,    68,    69,    70,    71,    74,    76,    78,    80,
      81,    83,    84,    85,    86,    88,    90,    91,    93,    94,
      96,    98,    99,   101,   103,   105,   106,   108,   109,   111,
     112,   113,   115,   117,   118,   120,   122,   123,   125,   126,
     128,   130,   132,   133,   135,   137,   138,   140,   142,   143,
     145,   147,   148,   150,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   168,   169,
     171,   172,   174,   175,   177,   179,   180,   182,   183,   185,
     186,   187,   188,   189,   190,   191,   193,   194,   195,   197,
     198,   199,   200,   201,   203,   204,   205,   206,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   219,   220,   221,
     223,   224,   226,   227,   229,   231,   232,   234,   236,   238,
     239,   242,   243]])


m4_define([b4_prhs_min],
[[0]])


m4_define([b4_percent_define_bison_variables(lr.keep-unreachable-states)],
[[]])


m4_define([b4_spec_outfile],
[[Generated/rule.tab.cpp]])


m4_define([b4_translate_max],
[[67]])


m4_define([b4_user_token_number_max],
[[322]])


m4_define([b4_r1_min],
[[0]])


m4_define([b4_max_left_semantic_context],
[[0]])


m4_define([b4_pgoto_max],
[[203]])


m4_define([b4_rules_number],
[[122]])


m4_define([b4_file_name_all_but_ext],
[[Generated/rule.tab]])


m4_define([b4_error_verbose_flag],
[[1]])


m4_define([b4_percent_define(lr.type)],
[[lalr]])


m4_define([b4_r2_min],
[[0]])


m4_define([b4_pact],
[[  -197,    40,  -197,  -197,   -24,     1,    11,    39,   161,   161,
     178,    92,    -9,   161,   161,   161,   161,   161,  -197,  -197,
    -197,    44,    42,    52,    85,    89,  -197,   181,    19,  -197,
    -197,   -18,   104,   118,   161,    77,    18,  -197,    33,  -197,
     -41,    82,   120,    96,    80,    41,   -24,   108,    -7,   106,
      94,   126,   178,  -197,   -18,   107,  -197,    87,  -197,    98,
    -197,  -197,  -197,  -197,  -197,   161,   161,   161,   161,   161,
     161,   161,   161,   161,   161,   161,   161,   161,   161,   161,
     140,   161,  -197,  -197,   114,  -197,   129,  -197,  -197,  -197,
     161,  -197,   118,   161,  -197,   165,   166,   167,   128,   168,
      82,  -197,  -197,   137,   131,  -197,  -197,  -197,  -197,  -197,
    -197,   123,  -197,   178,   178,    77,   133,  -197,   161,  -197,
    -197,    89,  -197,    19,    19,    13,    13,    13,    13,    13,
      13,  -197,  -197,  -197,  -197,   139,  -197,   135,   161,   161,
    -197,  -197,  -197,  -197,  -197,   165,  -197,     4,   142,   176,
    -197,   166,  -197,   152,  -197,   167,  -197,  -197,   178,  -197,
     145,   188,  -197,     6,   184,  -197,   170,  -197,  -197,  -197,
    -197,  -197,    17,   161,   197,    17,  -197,    15,    -4,    36,
    -197,   193,  -197,  -197,   162,   178,   161,     2,   189,  -197,
     169,   161,  -197,   179,   209,   171,   172,  -197,   174,  -197,
    -197,   173,    82,    17,  -197,   165,  -197,  -197,   206,   200,
     182,   178,  -197,  -197,    66,    17,   183,   222,   209,  -197,
     161,  -197,  -197,    17,   187,   233,  -197,   196,   178,  -197,
     234,   178,   161,  -197,    17,  -197,  -197,   199,  -197,  -197,
      82,  -197,  -197,   201,   236,   218,   202,  -197,   204,  -197,
     205,   178,  -197,  -197,  -197,   242,   207,  -197]])


m4_define([b4_dprec_min],
[[0]])


m4_define([b4_defact_min],
[[0]])


m4_define([b4_percent_define(lr.keep-unreachable-states)],
[[false]])


m4_define([b4_synclines_flag],
[[1]])


m4_define([b4_nondeterministic_flag],
[[0]])


m4_define([b4_defines_flag],
[[1]])


m4_define([b4_conflict_list_heads_max],
[[0]])


m4_define([b4_dir_prefix],
[[Generated/]])


m4_define([b4_merger_max],
[[0]])


m4_define([b4_undef_token_number],
[[2]])


m4_define([b4_percent_define_bison_variables(lr.type)],
[[]])


m4_define([b4_percent_define_loc(lr.keep-unreachable-states)],
[[[[<default value>:-1.-1]], [[<default value>:-1.-1]]]])


m4_define([b4_prhs_max],
[[434]])


m4_define([b4_spec_file_prefix],
[[]])


m4_define([b4_r1_max],
[[120]])


m4_define([b4_percent_define_bison_variables(lr.default-reductions)],
[[]])


m4_define([b4_percent_define_loc(lr.type)],
[[[[<default value>:-1.-1]], [[<default value>:-1.-1]]]])


m4_define([b4_toknum_min],
[[0]])


m4_define([b4_percent_define(lr.default-reductions)],
[[most]])


m4_define([b4_spec_defines_file],
[[Generated/rule.tab.h]])


m4_define([b4_conflicting_rules_min],
[[0]])


m4_define([b4_r1],
[[     0,    68,    69,    69,    69,    69,    70,    71,    72,    73,
      73,    74,    74,    74,    74,    75,    76,    76,    77,    77,
      78,    79,    79,    80,    81,    82,    82,    83,    83,    84,
      84,    84,    85,    86,    86,    87,    88,    88,    89,    89,
      90,    91,    92,    92,    93,    94,    94,    95,    96,    96,
      97,    98,    98,    99,   100,   100,   100,   100,   100,   100,
     100,   100,   100,   100,   100,   100,   100,   100,   101,   101,
     102,   102,   103,   103,   104,   105,   105,   106,   106,   107,
     107,   107,   107,   107,   107,   107,   108,   108,   108,   109,
     109,   109,   109,   109,   110,   110,   110,   110,   111,   111,
     111,   111,   111,   111,   111,   111,   111,   112,   112,   112,
     113,   113,   114,   114,   115,   116,   116,   117,   118,   119,
     119,   120,   120]])


m4_define([b4_pre_prologue],
[[]b4_syncline(1, [["rule.y"]])[

#include <iostream>
#include <vector>
using namespace std;

#include "rule.flex.cpp"
#include "../syntax_tree.h"
void yyerror(const char* msg) {
	extern struct offset_t token_offset;
	printf("Compile error near line %d, col %d\n",token_offset.line, token_offset.col);
	puts(msg);
	exit(-1);
}

node_t *extract_id_list(const char *type_name, vector<node_t *> *s1, node_t *s2=NULL) 
{
	bool extra=s2!=NULL; // Whether an extra '(' or '{' or '@{<' is included to calculate bounds
	if(!extra && s1->size()==1) // Single node without brackets
	{
		s2=s1->front();
		delete s1; // Release memory! 
		return s2;
	}
	else // Create new node
	{
		node_t *ss = create_virtual_node(type_name,extra?s1->size()-1:s1->size());
		for(vector<node_t *>::iterator p = extra ? ++s1->begin() : s1->begin(); p != s1->end(); ++p) 
			ss->append(*p,"element"); 
		ss->rebound(s1->front());
		if(extra)
			ss->rebound(s2); 
		delete s1; // Release memory! 
		return ss;
	}
}

]])


m4_define([b4_r2],
[[     0,     2,     0,     3,     3,     3,     4,     4,     1,     1,
       2,     0,     2,     2,     2,     1,     1,     2,     4,     6,
       1,     1,     2,     4,     1,     1,     2,     5,     7,     1,
       3,     3,     1,     1,     2,     4,     2,     2,     2,     3,
       3,     1,     1,     3,     1,     1,     3,     1,     1,     2,
       1,     1,     2,     4,     4,     3,     5,     3,     6,     7,
       8,     9,     6,     4,    10,    12,     2,     3,     2,     2,
       2,     3,     1,     1,     1,     1,     3,     1,     3,     1,
       3,     3,     3,     3,     3,     3,     1,     3,     3,     1,
       3,     3,     3,     3,     1,     2,     2,     2,     1,     1,
       3,     2,     2,     2,     1,     1,     1,     1,     4,     3,
       2,     2,     2,     3,     2,     2,     3,     3,     2,     2,
       3,     1,     3]])


m4_define([b4_check_min],
[[-1]])


m4_define([b4_states_number],
[[258]])


m4_define([b4_r2_max],
[[12]])


m4_define([b4_dprec_max],
[[0]])


m4_define([b4_defgoto],
[[    -1,     1,    21,    98,    99,   100,   101,   144,   145,   146,
     150,   151,   152,   154,   155,   156,   195,   217,   218,   219,
     178,   179,   200,   147,   148,   103,   104,    51,    52,   187,
     188,   189,    53,    44,    45,   107,    86,    24,    25,    26,
      27,    28,    29,    30,    48,    35,    36,    37,    38,    85,
      39,    40,    87]])


m4_define([b4_defact_max],
[[122]])


m4_define([b4_stos],
[[     0,    69,     0,     3,     5,     8,    19,    20,    21,    25,
      27,    28,    29,    30,    35,    39,    50,    51,    63,    64,
      65,    70,   100,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    39,    43,    61,   113,   114,   115,   116,   118,
     119,     9,    39,    39,   101,   102,     5,   104,   112,   104,
       5,    95,    96,   100,   112,     5,    47,   104,   110,   104,
     110,   110,    67,    66,    66,    34,    33,    50,    51,    55,
      56,    57,    58,    59,    60,    37,    38,    52,    53,    41,
      46,    49,    40,   104,     5,   117,   104,   120,    47,    40,
      48,    44,    47,    48,    62,    12,    13,    14,    71,    72,
      73,    74,     5,    93,    94,     6,    40,   103,   104,    47,
      40,    48,   113,    22,    26,   113,    11,   100,    49,    47,
      40,   106,   107,   109,   109,   108,   108,   108,   108,   108,
     108,   110,   110,   110,   110,   104,     5,   104,    49,    36,
     104,   117,   120,     5,    75,    76,    77,    91,    92,     5,
      78,    79,    80,     5,    81,    82,    83,    47,    10,    74,
      40,    48,   103,    95,    95,    47,   104,    42,    47,   104,
     104,    77,    45,    49,    48,     9,    80,    39,    88,    89,
      83,    95,    47,     5,    11,    23,    24,    97,    98,    99,
      11,    31,     5,    15,    16,    84,   104,     5,    84,    40,
      90,    91,     9,    45,    40,    47,    11,    47,    95,   104,
      11,    23,    99,    47,   104,    36,     5,    85,    86,    87,
      49,    47,    47,    45,    71,    84,    90,    11,    22,    47,
      95,    26,    32,    84,    45,    11,    87,   104,    84,    47,
       9,    47,    95,    11,    95,   104,    84,    47,    71,    47,
      11,    26,    47,    47,    47,    95,    11,    47]])


m4_define([b4_final_state_number],
[[2]])


m4_define([b4_defgoto_min],
[[-1]])


m4_define([b4_file_name],
[["rule.y"]])


m4_define([b4_percent_define_syncline(lr.default-reductions)],
[[]])


m4_define([b4_percent_define_syncline(lr.type)],
[[]])


m4_define([b4_locations_flag],
[[0]])


m4_define([b4_rhs_min],
[[-1]])


m4_define([b4_pact_min],
[[-197]])


m4_define([b4_conflicting_rules],
[[     0]])


